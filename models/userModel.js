import mongoose from 'mongoose'
import bcrypt from 'bcrypt'
// const mongoose = require('mongoose')

const Schema = mongoose.Schema

const userSchema = new Schema({
    email: {
        type:String,
        required: true,
        unique: true
    },
    password: {
        type:String,
        required: true
    }
}, {timestamps: true})

userSchema.pre('save', async function(next){
    // if this user's password is not modified, then move the next step
    if(!this.isModified('password')){
        next()
    }

    const salt = await bcrypt.genSalt(10)
    // the salt is a key generated by bcrypt
    this.password = await bcrypt.hash(this.password, salt)
})

userSchema.methods.matchPassword = async function(enteredPassword){
    return await bcrypt.compare(enteredPassword, this.password)
}
// module.exports = mongoose.model('domainSchema', domainSchema)
export default mongoose.model('userSchema', userSchema)

